name: ChatApp CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu Latest - Qt 6",
            os: ubuntu-latest,
            qt_version: "6.5.0",
            qt_modules: "qtbase qtnetwork qtsql"
          }
          - {
            name: "Windows Latest - Qt 6",
            os: windows-latest,
            qt_version: "6.5.0",
            qt_modules: "qtbase qtnetwork qtsql"
          }

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0
        sudo apt-get install -y libgl1-mesa-dev libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-xkb1 xvfb
        sudo apt-get install -y libxcb-randr0 libxcb-shape0 libxcb-cursor0 libxcb-sync1 libxcb-xfixes0 libxcb-shm0 libxcb-glx0

    - name: Set up Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.config.qt_version }}
        cache: true
        
    - name: Configure CMake
      run: |
        cd ChatApp
        mkdir build
        cd build
        cmake ..

    - name: Build
      run: |
        cd ChatApp/build
        cmake --build . --config Release

    - name: Run Tests on Linux
      if: runner.os == 'Linux'
      run: |
        cd ChatApp/build
        export DISPLAY=:99
        export QT_QPA_PLATFORM=xcb
        sudo Xvfb :99 -screen 0 1024x768x24 &
        sleep 3
        ctest -C Release  --output-on-failure
      
    - name: Run Tests on Windows
      if: runner.os == 'Windows'
      run: |
        cd ChatApp/build
        ctest -C Release -V --output-on-failure
