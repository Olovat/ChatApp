name: ChatApp CI

on:
  push:
    branches: [ main, master, UNIT-TEST ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu Latest - Qt 6",
            os: ubuntu-latest,
            qt_version: "6.5.0",
            qt_modules: "qtbase qtnetwork qtsql"
          }
          - {
            name: "Windows Latest - Qt 6",
            os: windows-latest,
            qt_version: "6.5.0",
            qt_modules: "qtbase qtnetwork qtsql"
          }

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0 libxcb-randr0 libxcb-render0 libxcb-shm0
        sudo apt-get install -y libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0
        sudo apt-get install -y libxcb-xfixes0 libxcb-shape0 libxcb-sync-dev libxcb-xkb-dev
        sudo apt-get install -y libxkbcommon-dev libxkbcommon-x11-dev libxkbcommon-x11-0
        sudo apt-get install -y libgl1-mesa-dev xvfb

    - name: Set up Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.config.qt_version }}
        cache: true
        modules: ${{ matrix.config.qt_modules }}

    - name: Install Google Test
      run: |
        git clone https://github.com/google/googletest.git --branch release-1.12.1
        cd googletest
        cmake -Bbuild -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/gtest_install -DBUILD_GMOCK=ON
        cmake --build build --target install
      
    - name: List directory structure (Linux)
      if: runner.os == 'Linux'
      run: |
        ls -la
        ls -la tests || echo "No tests directory"
      
    - name: List directory structure (Windows)
      if: runner.os == 'Windows'
      run: |
        dir
        dir tests || echo "No tests directory"
        
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake ../tests/test_client -DCMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/gtest_install

    - name: Build
      run: |
        cd build
        cmake --build . --config Release

    - name: Setup xvfb for Linux
      if: runner.os == 'Linux'
      uses: GabrielBB/xvfb-action@v1.0
      with:
        run: |
          cd build
          ctest -C Release --output-on-failure
        
    - name: Run Tests (Windows)
      if: runner.os == 'Windows'
      run: |
        cd build
        ctest -C Release --output-on-failure
